{"version":3,"sources":["card-utils.js","Card.js","MyHand.js","CardTable.js","App.js","reportWebVitals.js","index.js"],"names":["cardpack","getSuitSymbol","value","length","charAt","getCardValue","card","substring","Card","props","console","log","colourClass","selected","playable","notPlayable","suitSymbol","CardUtils","cardString","cardClasses","hidden","valueClasses","className","onClick","MyHand","hand","yourGo","useState","setHand","playableClass","setPlayableClass","handsRef","useRef","useEffect","current","h","map","xcard","findIndex","c1","restoreCardRef","restoreCard","newHand","sort","a","b","c","cardP","index","ret","cardx","id","toggleSelected","type","splice","playCard","alert","playableCards","forEach","pcard","knock","CardTable","heartsCards","game","classes","played","remove","clubsCards","diamondsCards","spadesCards","App","setRestoreCard","setLog","player","setPlayer","nextPlayer","setNextPlayer","setGame","ws","setWs","setPlayable","kitty","setKitty","knocks","setKnocks","Date","now","echo","setEcho","startTime","getCard","localWs","WebSocket","onopen","evt","setInterval","send","JSON","stringify","updateGame","action","g","suit","cardValue","newTable","hearts","oldcard","clubs","diamonds","spades","sChars","suit1","push","i","newGame","p","onmessage","event","data","np","newhand","m","parse","nextplayer","left","message","cards","playerText","register","playerOptions","echoTime","Math","round","htmlFor","name","onChange","target","players","window","confirm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55e1b847.chunk.js","sourcesContent":["export const cardpack = [\n  \"AH\",\"2H\",\"3H\",\"4H\",\"5H\",\"6H\",\"7H\",\"8H\",\"9H\",\"10H\",\"JH\",\"QH\",\"KH\",\n  \"AC\",\"2C\",\"3C\",\"4C\",\"5C\",\"6C\",\"7C\",\"8C\",\"9C\",\"10C\",\"JC\",\"QC\",\"KC\",\n  \"AD\",\"2D\",\"3D\",\"4D\",\"5D\",\"6D\",\"7D\",\"8D\",\"9D\",\"10D\",\"JD\",\"QD\",\"KD\",\n  \"AS\",\"2S\",\"3S\",\"4S\",\"5S\",\"6S\",\"7S\",\"8S\",\"9S\",\"10S\",\"JS\",\"QS\",\"KS\"\n]\n\nexport function getSuitSymbol(value) {\n\n  const suits = {\n    'C': '\\u2663',\n    'D': '\\u2666',\n    'S': '\\u2660',\n    'H': '\\u2665'\n  }\n\n  let suit = value.length === 2 ? value.charAt(1) : value.charAt(2);\n\n  return suits[suit]\n}\n\nexport function getCardValue(card) {\n  return card.length === 2 ? card.substring(0,1) : card.substring(0,2)\n}","import \"./Card.css\";\nimport * as CardUtils from './card-utils';\n\nexport function Card(props) {\n\n  console.log(\"Cards\")\n\n  function getColour(value) {\n\n    const colours = {\n      'C': 'card-black',\n      'D': 'card-red',\n      'S': 'card-black',\n      'H': 'card-red'\n    }\n    let suit = value.length === 2 ? value.charAt(1) : value.charAt(2);\n\n    return colours[suit]\n  }\n\n  const colourClass = getColour(props.value)\n\n  const selected = props.selected && props.playable ? \"card-selected\" : \"\"\n  const notPlayable = props.selected && !props.playable ? \" card-selected-not-playable bounce\" : \"\"\n  // const playableColour = props.playable ? \"\" : \" card-not-playable-grey\"\n\n  const suitSymbol = CardUtils.getSuitSymbol(props.value)\n  const cardValue = CardUtils.getCardValue(props.value)\n  const cardString = cardValue + suitSymbol\n  const cardClassHidden = props.hidden ? \" card-hidden\" : \"\"\n  const cardClasses = \"card-card \" + selected + cardClassHidden + notPlayable\n  const valueClasses = \"card-value \" + colourClass\n\n  return (\n    <div className={cardClasses} onClick={props.onClick}>\n      <div className={valueClasses}>\n        {cardString}\n      </div>\n    </div>\n  )\n}","import \"./MyHand.css\";\nimport { Card } from './Card.js';\nimport { useState } from 'react';\nimport { useEffect, useRef } from \"react\";\n\nexport function MyHand(props) {\n\n  // Props:\n  // hand - array of card values\n\n  console.log(`myhand called with props.hand: ${props.hand}`)\n  console.log(`myhand called with props.playable: ${props.playable}`)\n  console.log(`myhand called with props.yourGo: ${props.yourGo}`)\n\n  const [hand, setHand] = useState([])\n  const [playableClass, setPlayableClass] = useState(\"myhand-non-playable-knock\")\n\n  const handsRef = useRef()\n\n  useEffect( () => {\n\n    console.log(\"setting hand\")\n\n    if (props.hand && handsRef.current !== props.hand ) {\n      setHand(h => {\n        return props.hand.map( xcard => { \n          let playable = false\n          let index = props.playable.findIndex(c1 => {\n            return c1 === xcard\n          })\n          if (index !== -1) playable = true \n          let r = {value: xcard, selected: false, playable: playable}\n          return r\n        })  \n      })\n    }\n\n    handsRef.current = props.hand\n\n  },[props.hand, props.playable])\n  \n  useEffect( () => {\n\n    console.log(\"applying props.playable\")\n    if (props.playable) {\n      setHand(h => {\n        return h.map( xcard => {\n          let playable = false\n          let index = props.playable.findIndex(c1 => {\n            return c1 === xcard.value\n          })\n          if (index !== -1) playable = true \n          let r = {value: xcard.value, selected: xcard.selected, playable: playable}\n          return r\n        })  \n      })\n    }\n\n  }, [props.playable])\n\n  const restoreCardRef = useRef()\n\n  useEffect( () => {\n\n    console.log(\"restoring card\")\n\n    const cardpack = [\n      \"AH\",\"2H\",\"3H\",\"4H\",\"5H\",\"6H\",\"7H\",\"8H\",\"9H\",\"10H\",\"JH\",\"QH\",\"KH\",\n      \"AC\",\"2C\",\"3C\",\"4C\",\"5C\",\"6C\",\"7C\",\"8C\",\"9C\",\"10C\",\"JC\",\"QC\",\"KC\",\n      \"AD\",\"2D\",\"3D\",\"4D\",\"5D\",\"6D\",\"7D\",\"8D\",\"9D\",\"10D\",\"JD\",\"QD\",\"KD\",\n      \"AS\",\"2S\",\"3S\",\"4S\",\"5S\",\"6S\",\"7S\",\"8S\",\"9S\",\"10S\",\"JS\",\"QS\",\"KS\"\n    ]  \n\n    if (props.restoreCard && restoreCardRef.current !== props.restoreCard) {\n      setHand(h => {\n        let newHand = [...h, { value: props.restoreCard, selected: false, playable: false}]\n        newHand.sort( (a,b) => {\n          let ai = cardpack.findIndex(c => a.value === c)\n          let bi = cardpack.findIndex(c => b.value === c)\n          return (ai - bi)\n        })\n\n        let newHandP = newHand.map(cardP => {\n          let index = props.playable.findIndex(c1 => {\n            return c1 === cardP.value\n          })\n          let ret = {...cardP}\n          if (index === -1) ret.playable = false \n          else ret.playable = true\n          return ret\n        })\n  \n        return newHandP\n      })\n    }\n\n    restoreCardRef.current = props.restoreCard\n\n  },[props.restoreCard, props.playable])\n\n  function toggleSelected(id) {\n\n    let newHand = hand.map( (card,index) => {\n      return { value: card.value, playable: card.playable, selected: id === index ? true : false}\n    })\n\n    setHand(newHand)\n  }\n\n  function playCard() {\n    let selected = hand.findIndex( c => {\n      return c.selected\n    })\n\n    console.log(`selected: ${selected}`)\n\n    if (selected >= 0) {\n      let card = hand[selected].value\n\n      let newHand = [...hand];\n      newHand.splice(selected,1);\n  \n      props.playCard(card,newHand.length)\n  \n      setHand(newHand)  \n    } else {\n      alert(\"You must select a card first\")\n    }\n  }\n\n  function knock() {\n\n    let playableCards = false;\n\n    hand.forEach(xcard => {\n      let index = props.playable.findIndex(pcard => {\n        return pcard === xcard.value\n      })\n\n      if (index !== -1) {\n        playableCards = true\n      }\n    })\n\n    if (playableCards) {\n      setPlayableClass(\"myhand-playable-knock bounce\")      \n    } else {\n      setPlayableClass(\"myhand-non-playable-knock\")\n      props.knock()\n    }\n  }\n\n  return (\n    <div className=\"myhand-panel\">\n      <div className=\"myhand-container\">\n        { hand.length > 0\n          && hand.map( (cardx,index) => {\n            return <div key={index} className=\"myhand-card\">\n              <Card playable={cardx.playable} value={cardx.value} selected={cardx.selected} onClick={()=>{toggleSelected(index)}}/>\n            </div>\n            })\n        }\n        { props.yourGo &&\n        <div>\n          <input type=\"button\" onClick={() => {playCard()}} value=\"Play Card\" />\n          <input type=\"button\" className={playableClass} onClick={() => {knock()}} value=\"Knock\" />\n        </div>        \n        }\n      </div>\n    </div>\n  )\n}","import \"./CardTable.css\";\nimport { Card } from './Card.js';\n\nexport function CardTable(props) {\n\n  const heartsCards = props.game[\"hearts\"].map( (card,index) => {\n    const playedClass = card.played ? \"\" : \"cardtable-notplayed\"\n    const classes = \"cardtable-card cardtable-hearts \" +  playedClass\n    return <div key={index} className={classes}>\n      <Card playable=\"true\" selected=\"false\" value={card.value + \"H\"} hidden={!card.played} onClick={() => props.remove(card.value + \"H\")} />\n      </div>\n  })\n  const clubsCards = props.game[\"clubs\"].map( (card,index) => {\n    const playedClass = card.played ? \"\" : \"cardtable-notplayed\"\n    const classes = \"cardtable-card cardtable-clubs \" +  playedClass\n    return <div key={index} className={classes}>\n      <Card playable=\"true\" selected=\"false\" value={card.value + \"C\"} hidden={!card.played} onClick={() => props.remove(card.value + \"C\")} />\n      </div>\n  })\n  const diamondsCards = props.game[\"diamonds\"].map( (card,index) => {\n    const playedClass = card.played ? \"\" : \"cardtable-notplayed\"\n    const classes = \"cardtable-card cardtable-diamonds \" +  playedClass\n    return <div key={index} className={classes}>\n      <Card playable=\"true\" selected=\"false\" value={card.value + \"D\"} hidden={!card.played} onClick={() => props.remove(card.value + \"D\")} />\n      </div>\n  })\n  const spadesCards = props.game[\"spades\"].map( (card,index) => {\n    const playedClass = card.played ? \"\" : \"cardtable-notplayed\"\n    const classes = \"cardtable-card cardtable-spades \" +  playedClass\n    return <div key={index} className={classes}>\n      <Card playable=\"true\" selected=\"false\" value={card.value + \"S\"} hidden={!card.played} onClick={() => props.remove(card.value + \"S\")} />\n      </div>\n  })\n\n  return (\n    <div className=\"cardtable-panel\">\n      <div className=\"cardtable-container\">\n        <div className=\"cardtable-hearts\">{ heartsCards }</div>\n        <div className=\"cardtable-clubs\">{ clubsCards }</div>\n        <div className=\"cardtable-diamonds\">{ diamondsCards }</div>\n        <div className=\"cardtable-spades\">{ spadesCards }</div>\n      </div>\n    </div>\n  )\n}","import './App.css';\nimport { MyHand } from './MyHand.js';\nimport { CardTable } from './CardTable.js';\nimport { useState, useEffect } from 'react';\nimport * as CardUtils from './card-utils';\n\nfunction App() {\n\n  console.log(\"App called\")\n\n  const [restoreCard,setRestoreCard] = useState()\n  const [log,setLog] = useState(\"\")\n  const [hand,setHand] = useState([])\n  const [player,setPlayer] = useState()\n  const [nextPlayer,setNextPlayer] = useState('start')\n  const [game,setGame] = useState(resetGame())\n  const [ws,setWs] = useState()\n  const [playable,setPlayable] = useState(['7D'])\n  const [kitty,setKitty] = useState(0)\n  const [knocks,setKnocks] = useState({})\n  const [echo,setEcho] = useState(Date.now())\n  const [startTime,setStartTime] = useState(Date.now())\n  \n  console.log(`Player: ${player}`)\n\n  function resetGame() { return {\n    \"hearts\": [\n        { value: 'A', played : false },\n        { value: '2', played : false },\n        { value: '3', played : false },\n        { value: '4', played : false },\n        { value: '5', played : false },\n        { value: '6', played : false },\n        { value: '7', played : false },\n        { value: '8', played : false },\n        { value: '9', played : false },\n        { value: '10', played : false },\n        { value: 'J', played : false },\n        { value: 'Q', played : false },\n        { value: 'K', played : false }\n      ],\n    \"clubs\": [\n        { value: 'A', played : false },\n        { value: '2', played : false },\n        { value: '3', played : false },\n        { value: '4', played : false },\n        { value: '5', played : false },\n        { value: '6', played : false },\n        { value: '7', played : false },\n        { value: '8', played : false },\n        { value: '9', played : false },\n        { value: '10', played : false },\n        { value: 'J', played : false },\n        { value: 'Q', played : false },\n        { value: 'K', played : false }\n      ],\n    \"diamonds\": [\n        { value: 'A', played : false },\n        { value: '2', played : false },\n        { value: '3', played : false },\n        { value: '4', played : false },\n        { value: '5', played : false },\n        { value: '6', played : false },\n        { value: '7', played : false },\n        { value: '8', played : false },\n        { value: '9', played : false },\n        { value: '10', played : false },\n        { value: 'J', played : false },\n        { value: 'Q', played : false },\n        { value: 'K', played : false }\n      ],\n    \"spades\": [\n        { value: 'A', played : false },\n        { value: '2', played : false },\n        { value: '3', played : false },\n        { value: '4', played : false },\n        { value: '5', played : false },\n        { value: '6', played : false },\n        { value: '7', played : false },\n        { value: '8', played : false },\n        { value: '9', played : false },\n        { value: '10', played : false },\n        { value: 'J', played : false },\n        { value: 'Q', played : false },\n        { value: 'K', played : false }\n      ]\n    }\n  }\n\n  useEffect( () => {\n\n    // runs once on component initialisation\n    console.log(\"App: setting up websocket\")\n\n    var HOST = \"wss://jbsevens.herokuapp.com\"\n    let localWs = new WebSocket(HOST);\n\n    localWs.onopen = (evt) => {\n      console.log(`Websocket opened`)\n    }\n\n    // setup ping to keep connection open\n\n    setInterval( () => {\n      localWs.send(\n        JSON.stringify({\n          type: 'ping'\n        })          \n      )\n    },30000) \n\n    setWs(localWs)\n\n  },[])\n\n  useEffect( () => {\n\n    // helper functions for the event handling must be in the scope of the useEffect,\n    // otherwise they will pick up stale references to state variables\n\n    function updateGame(card,action) {\n      setGame( g => {\n  \n        let suit = card.length === 2 ? card.charAt(1) : card.charAt(2);\n        let cardValue = card.length === 2 ? card.substring(0,1) : card.substring(0,2)\n  \n        let played = true;\n  \n        if (action === 'play') {\n          played = true \n        } else if ( action === 'retract') {\n          played = false\n        }\n    \n        const newTable = {\n          hearts: g[\"hearts\"].map( oldcard => {\n            if (suit === \"H\" && cardValue === oldcard.value) return { value: oldcard.value, played: played}\n            else return { value: oldcard.value, played: oldcard.played}\n          }),\n          clubs: g[\"clubs\"].map( oldcard => {\n            if (suit === \"C\" && cardValue === oldcard.value) return { value: oldcard.value, played: played}\n            else return { value: oldcard.value, played: oldcard.played}\n          }),\n          diamonds: g[\"diamonds\"].map( oldcard => {\n            if (suit === \"D\" && cardValue === oldcard.value) return { value: oldcard.value, played: played}\n            else return { value: oldcard.value, played: oldcard.played}\n          }),\n          spades: g[\"spades\"].map( oldcard => {\n            if (suit === \"S\" && cardValue === oldcard.value) return { value: oldcard.value, played: played}\n            else return { value: oldcard.value, played: oldcard.played}\n          })\n        }\n\n        // now work out playable cards...\n\n        let s = [\"hearts\",\"clubs\",\"diamonds\",\"spades\"]\n        let sChars = [\"H\",\"C\",\"D\",\"S\"]\n\n        let playableCards = []\n\n        s.forEach((suit1,index) => {\n          if (newTable[suit1][6].played === false) playableCards.push(newTable[suit1][6].value + sChars[index])\n          else {\n            for (let i=7; i<13; i++) {\n              if (newTable[suit1][i].played === false) {\n                playableCards.push(newTable[suit1][i].value + sChars[index])\n                break\n              }\n            }\n            for (let i=5; i>=0; i--) {\n              if (newTable[suit1][i].played === false) {\n                playableCards.push(newTable[suit1][i].value + sChars[index])\n                break\n              }\n            }\n          }\n  \n        })\n\n        setPlayable(playableCards)\n      \n        return(newTable)    \n      })\n    }\n    \n    function newGame() {\n      console.log(`New game called, player: ${player}`)\n      setKitty(0)\n      setNextPlayer('start')\n      setLog(`New game! - who has the the 7 of Diamonds?`)\n      setGame(resetGame())\n      sendHandRequest(player)\n      setPlayable([\"7D\"])\n    }  \n\n    function updateHand(newhand) {\n      console.log(`Update hand called with ${newhand}`)\n  \n      newhand.sort( (a,b) => {\n        let ai = CardUtils.cardpack.findIndex(c => a === c)\n        let bi = CardUtils.cardpack.findIndex(c => b === c)\n        return (ai - bi)\n      })\n  \n      setHand(newhand)\n    }\n\n    function sendHandRequest(p) {\n      console.log(`send hand request called, player: ${p}`)\n      if (p) {\n        ws.send(JSON.stringify({\n          type: 'hand',\n          player: p\n        }))  \n      }\n    }\n    \n    // websocket event handlers\n\n    if (ws) {\n      ws.onmessage = (event) => {\n        console.log(event.data)\n        let m = JSON.parse(event.data);\n        let np;\n  \n        switch(m.type) {\n          case 'reset':\n            setPlayer('')\n            resetGame()\n            setHand([])\n            break;\n          case 'card':\n            np = m.nextplayer === player ? \"YOUR\" : `${m.nextplayer}'s`\n            setNextPlayer(m.nextplayer)\n            if (m.left === 0) {\n              setLog(`${m.player} played ${getCard(m.card)} and has WON!!!!!!!`)\n            } else {\n              setLog(`${m.player} played ${getCard(m.card)} and has ${m.left} card(s) left - ${np} go...`)\n            }\n            updateGame(m.card,'play');\n            break;\n          case 'knock':\n            np = m.nextplayer === player ? \"YOUR\" : `${m.nextplayer}'s`\n            setNextPlayer(m.nextplayer)\n            setLog(`${m.player} knocked! - ${np} go...`)\n            break;\n          case 'retractCard':\n            let value = CardUtils.getCardValue(m.card)\n            let suit = CardUtils.getSuitSymbol(m.card)\n            setLog(`${m.player} retracted card ${value + suit}`)\n            updateGame(m.card,'retract')\n            setNextPlayer(m.player)\n            break;\n          case 'message':\n            setLog(`${m.message}`)\n            break;\n          case 'newgame':\n            newGame();\n            break;\n          case 'kitty':\n            setKitty(m.kitty)\n            setKnocks(m.knocks)\n            break;\n          case 'hand':\n            updateHand(m.cards);\n            break;\n          case 'echo':\n            setEcho(Date.now())\n            break;\n          default:\n            console.log(\"unsupported message type\")\n        }\n      }  \n    }\n  }, [ws,player])\n\n  function sendNewGame() {\n    ws.send(JSON.stringify({\n      type: 'newgame'\n    }))  \n  }\n\n  function sendCard(card,left) {\n    setRestoreCard(\"\")\n    ws.send(JSON.stringify({\n      type: 'card',\n      player: player,\n      left: left,\n      card: card\n    }))\n  }\n\n  function getCard(card) {\n    let value = CardUtils.getCardValue(card)\n    let suit = CardUtils.getSuitSymbol(card)\n    return (value + suit)\n  }\n\n  function sendReset() {\n    ws.send(JSON.stringify({\n      type: 'reset'\n    }))\n  }\n\n  function sendKitty() {\n    ws.send(JSON.stringify({\n      type: 'kitty'\n    }))\n  }\n\n  function knock() {\n    ws.send(JSON.stringify({\n      type: 'knock',\n      player: player\n    }))\n    sendKitty()\n  }\n\n  function removeCard(card) {\n    if(window.confirm(`Are you sure you want to retract the ${card}?`)){ \n      setRestoreCard(card)\n      ws.send(JSON.stringify({\n        type: 'retractCard',\n        player: player,\n        card: card\n      }))    \n    }\n  }\n\n  function showKitty() {\n    if ( kitty && knocks.players )\n    {\n      alert(\n        \"Kitty: \" + kitty + \"p\\n\" \n        + knocks.players[0] + \" knocked \" + knocks.knocks[0] + \" times\\n\"\n        + knocks.players[1] + \" knocked \" + knocks.knocks[1] + \" times\\n\"\n        + knocks.players[2] + \" knocked \" + knocks.knocks[2] + \" times\\n\"\n        + knocks.players[3] + \" knocked \" + knocks.knocks[3] + \" times\\n\"\n      )\n  \n    }\n  }\n\n  // Player registration\n\n  let playerText = \"\"\n\n  function updatePlayerText(evt) {\n    playerText = evt.target.value\n  }\n\n  function registerNewName() {\n    register(playerText)\n  }\n\n  function playerChanged(evt) {\n    if (evt.target.value !== \"...\") {\n      register(evt.target.value)\n    }\n  }\n\n  function register(p) {\n    ws.send(JSON.stringify({\n      type: 'register',\n      player: p\n    }))\n    setPlayer(p) \n  }\n\n  const presetPlayers = [\n    \"...\",\"John\",\"Nancy\",\"Allen\",\"Gavin\",\"Eric\"\n  ]\n\n  const playerOptions = presetPlayers.map((p) =>\n  <option value={p}>{p}</option>)\n\n  console.log(`App: player = ${player}, nextPlayer = ${nextPlayer}`)\n\n  let echoTime = Math.round((echo - startTime)/1000)\n\n  \n  return (\n    <div className=\"App\">\n      { !player &&\n        <div className=\"app-register\">\n          <h1>Sevens!</h1>\n          <label htmlFor=\"players\">Choose a predefined player:</label>\n          <select value={player} name=\"players\" id=\"players\" onChange={playerChanged}>\n            {playerOptions}\n          </select>\n          <div>...or enter a different name:</div>\n          <input type=\"text\" onChange={updatePlayerText} />\n          <input type=\"button\" value=\"Register new name\" onClick={registerNewName} />\n        </div>\n      }\n      { player &&\n          <div className=\"app-controls-and-hand\">\n          <div className=\"app-controls\">\n            { player === \"John\" &&\n            <div className=\"app-container\">\n              <div className=\"app-playerselecter\">\n                <div><span>{echoTime}</span></div>\n                <div><input type=\"button\" onClick={sendNewGame} value=\"New Game\" /></div>\n                <div><input type=\"button\" onClick={showKitty} value=\"Kitty\" /></div>\n                <div><input type=\"button\" onClick={sendReset} value=\"Reset Session\" /></div>\n              </div>\n            </div>          \n            }\n            <div>\n              <div className=\"app-log\">{log} - kitty: {kitty}p</div>\n            </div>\n          </div>\n\n          <MyHand yourGo={nextPlayer === player || nextPlayer === 'start'} playable={playable} hand={hand} playCard={sendCard} knock={knock} restoreCard={restoreCard}/> \n        </div>\n      }\n      { player &&\n        <CardTable game={game} remove={removeCard}/>      \n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}